plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    namespace = 'com.mozhimen.basick'
    compileSdk 34

    defaultConfig {
        minSdk 19
        multiDexEnabled true

        //fileProvider
        manifestPlaceholders = [fileProviderAuthoritiesSuffix: ".fileProvider"]
        buildFeatures.buildConfig = true
        buildConfigField("String", "FILE_PROVIDER_AUTHORITIES_SUFFIX", "\"${manifestPlaceholders['fileProviderAuthoritiesSuffix']}\"")

        //test
        testOptions {
            unitTests.returnDefaultValues = true
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //minify
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    //强制项目使用指定的版本
//    configurations.all {
//        resolutionStrategy {
//            force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//            force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//            force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//        }
//    }
}

dependencies {
    //////////////////////////////////////////////////////////////////
    //mine
    api project(':KUtilKit:utilk_android')

    //google
    api "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"

    api 'androidx.appcompat:appcompat:1.6.1'
    api 'androidx.core:core-ktx:1.12.0'//1.10.1
    api 'com.google.android.material:material:1.11.0'//1.9.0

    api 'androidx.activity:activity:1.7.2'
    api 'androidx.activity:activity-ktx:1.7.2'
    api 'androidx.fragment:fragment:1.6.2'
    api 'androidx.fragment:fragment-ktx:1.6.2'

    //////////////////////////////////////////////////////////////////
    //multidex
    api 'androidx.multidex:multidex:2.0.1'

    //////////////////////////////////////////////////////////////////
    //thread
    //coroutine
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    //////////////////////////////////////////////////////////////////
    //lifecycle
    api "androidx.lifecycle:lifecycle-common-java8:2.5.1"// 如果用Java8, 用于替代compiler
//    api "androidx.lifecycle:lifecycle-extensions:2.5.1"// lifecycle,livedata,viewmodel
    api "androidx.lifecycle:lifecycle-runtime:2.5.1"// lifecycle
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    api "androidx.lifecycle:lifecycle-service:2.5.1"// optional - helpers for implementing LifecycleOwner in a Service
    api "androidx.lifecycle:lifecycle-process:2.5.1"// optional - ProcessLifecycleOwner provides a lifecycle for the whole application process

    //livedata
    api 'androidx.lifecycle:lifecycle-livedata:2.5.1'// livedata
    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    api "androidx.lifecycle:lifecycle-reactivestreams:2.5.1"

    //viewmodel
    api 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'// viewmodel
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.1"

    //////////////////////////////////////////////////////////////////
    //test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}